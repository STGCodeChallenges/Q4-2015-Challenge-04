package com.stg.codechallenge;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

public class Game {
	private List<Frame> frames;
	private Frame currentFrame;
	private LinkedList<Integer> bonusBalls;
	private final int TWO = 2;
	private boolean gameOver = false;
	
	public Game() {
		frames = Arrays.asList(new Frame[10]);
		for(int i = 0; i < 10; i++) {
			frames.set(i, new Frame(i+1));
		}
		
		currentFrame = frames.get(0);
		 bonusBalls = new LinkedList();
	}
	
	public void playBall(int pins) throws BowlingException {
		if(gameOver) {
			throw new BowlingException("Game Over! Add more scores.");
		}
		currentFrame.addBall(pins);
		if(bonusBalls.size() > 0) {
			while(bonusBalls.element() != currentFrame.getFrameNum() -1) {
				frames.get(bonusBalls.poll() - 1).addBonus(pins);
			}
		}
		if((currentFrame.ballsBowled() == TWO || currentFrame.isStrike()) && currentFrame.getFrameNum() != currentFrame.TEN) {
			if(currentFrame.isSpare()) {
				bonusBalls.add(currentFrame.getFrameNum());
			} else if(currentFrame.isStrike()) {
				bonusBalls.add(currentFrame.getFrameNum());
				bonusBalls.add(currentFrame.getFrameNum());
			}
			currentFrame = frames.get(currentFrame.getFrameNum());
		}
		if(currentFrame.getFrameNum() == currentFrame.TEN) {
			if(((currentFrame.isStrike() || currentFrame.isSpare()) && currentFrame.ballsBowled() == 3) 
					|| ((!currentFrame.isStrike() && !currentFrame.isSpare()) && currentFrame.ballsBowled() == 2)) {
				gameOver = true;
			}
		}
		printGame();
	}
	
	public int getTotalScore() {
		int totalScore = 0;
		for(Frame frame : frames) {
			totalScore += frame.getScore();
		}
		return totalScore;
	}
	
	public void printGame() {
		for(Frame frame : frames) {
			System.out.println(frame);
		}
	}
}
